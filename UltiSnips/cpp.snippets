
snippet header "include header files"
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <complex>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <cassert>
using namespace std;

endsnippet

snippet gcd "Greatest common divisor"
int gcd(int a, int b)
{
	if (a < 0) a = -a;
	if (b < 0) b = -b;
	if (b > a) swap(a, b);
	while (b > 0) {
		int r = a % b;
		a = b;
		b = r;
	}
	return a;
}
endsnippet

# a*x + b*y = gcd(a,b)
snippet egcd "extended gcd"
int egcd(int  a, int b, int &x, int &y){
	if (b == 0) { x = 1; y = 0; return a; }
	int g = egcd(b, a%b, y, x);
	y -= a / b * x;
	return g;
}
endsnippet


snippet mod_inv "Modular inverse"
int mul_inv(int x, int n)
{
	int b0 = n, t, q;
	int x0 = 0, x1 = 1;
	if (n == 1) return 1;
	while (x > 1) {
		q = x / n;
		t = n, n = x % n, x = t;
		t = x0, x0 = x1 - q * x0, x1 = t;
	}
	if (x1 < 0) x1 += b0;
	return x1;
}
endsnippet
